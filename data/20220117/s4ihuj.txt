Title:People in hiring positions, what are the main things you look for in a good candidate?
URL: https://www.reddit.com/r/cscareerquestions/comments/s4ihuj/people_in_hiring_positions_what_are_the_main/
Maybe experience, fast/willing to learn, good communication.
----------TITLE----------
Topic engagement score: 3.31140350877193
----------------------------------------
Comment ID: hsr7rk6
Comment score: 97
Comment body: 1. Hard skills: rather than experience in a specific language or tool, I'm looking for a way of approaching and how someone is solving problems. There are a few cases when a specific language is required though, true. 
2. Incrementalist mindset: whether the candidate is able to quickly find the "first bite" that can be delivered easily and later on improved in an iterative way. Call it agile or pragmatic mindset if you like. 
3. Communication: a great software engineer (despite their experience level) should be able to communicate their thoughts in a clear, easy to understand way. 
4. Teamwork: are they able to think and work as a team? Are they happy to participate in pair coding, mob coding etc. Can they prioritize team goals over personal agenda?
5. Challenging the status quo: can they give feedback and challenge things in an assertive way?
6. Culture fit: absolutely depends on the company, team, org etc. 
7. Affable personality: the time of "brilliant jerks" is over. You spend at least 8 hours with your team members, so I think that's quite important, but also depends on the team and project. 
8. Learning: I don't really care about the current knowledge and experience. That's of course depends on the actual role but for me, it's more important to have a continuously learning attitude.
9. Customer first mindset: also depends on team, project, company, but it is very important to understand that no good software is built without keeping the customer needs in mind.
----------------------------------------
Comment ID: hsrbq22
Comment score: 22
Comment body: Curious how many people fit that list. Seems like you're looking for the whole package.
----------------------------------------
Comment ID: hsrmep2
Comment score: 15
Comment body: These lists are idealized. A healthy mindset for dealing with these kinds of things is to focus on your strengths in the list and not your gaps.
----------------------------------------
Comment ID: hsrqtdn
Comment score: 14
Comment body: No, this list is nearly identical to the list I use. Probably not in the order I look for (no assholes is number one imo), but checking these boxes is a prerequisite for an offer. If you're incompetent at one or more of these things, you're essentially a "ticket monkey". I have to give you fully laid out with because you can't communicate why a customer might want something else (lack of customer empathy leads to the same thing) or you can't figure out where to start to help plan a project.

What happens when a project pops up that requires learning a new language or skill? Go hire externally because nobody is willing to learn something new? Our primary programming language was changed this year when we decided to move to a new architecture. Did everyone in the company say, "well, guess I need to find a new job." No, they gave me a list of classes they wanted to take and I had them expense it. We set some time aside in two sprints to learn and everyone picked it up. We're back to the same velocity we had before the switch a couple months later.
----------------------------------------
Comment ID: hsrwjn0
Comment score: 10
Comment body: I wish I could find people who strongly show all of those requirements. I can't though. Most candidates I extend offers to only strongly show a subset of the behavioral skills I need in my teams. The teams I work with are customer-focused defect-eliminators that self-organize to solve problems, but the individual actors vary in their maturity.

My advice to "focus on building your strengths" is independent of interviewing candidates and is more appropriate for mentoring.
----------------------------------------
Comment ID: hsshq8i
Comment score: 6
Comment body: Of course you wouldn't.

If you check someone's MBTI stack for cognitive functions, you can't have all these cognitive functions developed unless you're 70. This is not how the human brain works.

Asking for problem solving Ti and being assertive Te in one person? But at the same time empathy Fe at an equal level?

Asking for detailed vision Si but also for being adaptable with the client's requests Ni?

Expecting them to be have high levels of any cognitive function means that another is not developed i.e the guy is either a technical savant but 0 social skills or an assertive asshole go-getter with no regards to the client or teammates.

Yes being in management you have your hands full, but at least some humanities or psychology notions would show you how you need mutiple people for every role and you can't have an all in one person.

The technical savant guy who is also a go-getter-team-leader and charming interface with the client is 3 guys not one.

psych 101.

EDIT: Downvote all you want. This mindset is exactly why most teams are understaffed.
----------------------------------------
Comment ID: hst2whh
Comment score: 5
Comment body: Yes, they exist and I work at a company full of those people.

The same person who's architecting a solution better have customer empathy or else they aren't going to build something that solves needs correctly. And if they're being a solution, then I don't need them to architect anything. And if that's the case, they're just a ticket monkey. And if they can't understand a problem well enough to find out how to attack in an iterative approach, then someone else is breaking it down and handling it off, and they're just another ticket monkey.


"But what if they can come up with great solutions to problems and break it down but they're an asshole," I hear you asking. Then the team is just building what that one engineer is coming up with. There's no collaboration and you bet your ass it's not the best solution when nobody else can make suggestions.

Yes, I expect all the engineers I work with to be able to communicate both customer and business value. I expect them to be able to see how their work impacts other teams. I expect them to learn from their coworkers in product, design, sales, and other engineers, regardless of level. I expect them to treat all coworkers as equals. I expect them to be able to be handed a customer problem and be able to pitch a solution to any audience. **Writing code is the easy part of this job.** It's everything I said above that separates the wheat from the chaff.

Edit: and for your edit, none of my teams are understaffed. We've only had one person leave in the last year. Everyone enjoys the working environment and the company's valuation backs up what I said above.
----------------------------------------
Comment ID: hstqik5
Comment score: 3
Comment body: > Yes, I expect all the engineers I work with to be able to communicate both customer and business value. I expect them to be able to see how their work impacts other teams. I expect them to learn from their coworkers in product, design, sales, and other engineers, regardless of level. I expect them to treat all coworkers as equals. I expect them to be able to be handed a customer problem and be able to pitch a solution to any audience. Writing code is the easy part of this job. It's everything I said above that separates the wheat from the chaff.

So you only work with extremely senior engineers? At my company this sounds like a strong Staff engineer, if not Snr Staff.

[This is a role breakdown](https://cdn.substack.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F379797c8-88fe-4701-a9e1-6a8c751a4f04_1892x2132.png) from an ex-Uber eng manager. What you're describing easily falls into Staff territory to me.

It's from this post, but it's only for subscribers: https://newsletter.pragmaticengineer.com/p/engineering-leadership-skillset-overlaps
----------------------------------------
Comment ID: hstuvhg
Comment score: 2
Comment body: Nope. My junior engineer can explain why they're working on something, the value it brings to the business, the value it brings to the customer, and has the power to question why any decision was made. They might not be able to articulate things quite as well as a staff engineer, but they can. Again, the reason junior engineers spend more time writing code than staff engineers is because that's the easy part. But expecting them to do none of it means they'll never be anything other than a junior engineer. Remember, promotions shouldn't happen because you think someone can maybe do a skill, they should be doing it already. Otherwise you end up with the Peter Principle.


Edit: I'll give an example. Our most junior engineer (unrelated degree, new to the field) noticed one of our processes led to our API docs to frequently be out of date internally. He pitched a solution to the team and we decided to adopt his proposed change. Is it something massive that our customers are high fiving us for? No. Did it increase velocity, reduce the amount time re-writing code, and free up some additional time for our tech writers to focus on more pressing needs? Yes. And that engineer said those things during their pitch.
----------------------------------------
Comment ID: hsu081a
Comment score: 1
Comment body: I get what you're saying, but I feel like there is a disconnect between what you're saying you expect engineers to be able to do and what they actually do.

Your junior engineer example is much lower level than going from customer problem -> solution and pitching to anyone, or being able to see impact across teams.

I guess you're saying, all of those things but scaled to their level. Which makes sense, but I feel like it makes the statement confusing and a bit pointless (I.e. "I expect an engineer to work to their level").